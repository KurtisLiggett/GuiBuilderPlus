; #HEADER# ======================================================================================================================
; Title .........: GuiBuilderPlus_codeGeneration.au3
; Description ...: Code generation and management
; ===============================================================================================================================


;------------------------------------------------------------------------------
; Title...........: _code_generation
; Description.....: generate the au3 code
; Return..........: code as string
;------------------------------------------------------------------------------
Func _code_generation()
	Local $controls, $controlEvents, $globals[2]

	;get options
;~ 	Local $bAddDpiScale = $setting_dpi_scaling
	Local $bAddDpiScale = False
	Local $bOnEventMode = $oOptions.eventMode
	Local $bGuiFunction = $oOptions.guiInFunction

	Local $sDpiScale = ""
	If $bAddDpiScale Then
		$sDpiScale = " * $fDpiFactor"
	EndIf

	;set up the region tags
	Local $regionStart = "#Region (=== GUI generated by " & $oMain.AppName & " " & $oMain.AppVersion & " ===)"
	Local $regionEnd = "#EndRegion (=== GUI generated by " & $oMain.AppName & " " & $oMain.AppVersion & " ===)"

	; Mod by: TheSaint - default includes
	Local $includes = "" & _
			"#include <GUIConstantsEx.au3>" & @CRLF & _
			"#include <WindowsConstants.au3>"
	If $bAddDpiScale Then
		$includes &= @CRLF & "#include <GDIPlus.au3>"
	EndIf

	If $oMain.Name <> "" Then
		$globals[0] = "Global $" & $oMain.Name & @CRLF
	Else
		$globals[0] = ""
	EndIf
	$globals[1] = "Global "
	Local $globalsIndex = 1

	Local $aCtrlCode
	For $oCtrl In $oCtrls.ctrls.Items()
		;generate globals for controls
		If (($oCtrl.Name <> "") And ($oCtrl.Global = $GUI_CHECKED)) Or (Not $bOnEventMode And $bGuiFunction And $oCtrl.CodeString <> "") Then
			If StringLen($globals[$globalsIndex]) > 100 Then
				$globals[$globalsIndex] = StringTrimRight($globals[$globalsIndex], 2) & @CRLF
				$globalsIndex += 1
				ReDim $globals[$globalsIndex + 1]
				$globals[$globalsIndex] = "Global "
			EndIf
			$globals[$globalsIndex] &= "$" & $oCtrl.Name & ", "
		EndIf

		;generate includes
		$includes &= _generate_includes($oCtrl, $includes)

		;generate controls
		$aCtrlCode = _generate_controls($controls, $oCtrl, $sDpiScale, False, $bOnEventMode, Not $bOnEventMode And $bGuiFunction And $oCtrl.CodeString <> "")
		$controls &= $aCtrlCode[0]
		$controlEvents &= $aCtrlCode[1]
	Next
	If $globals[$globalsIndex] = "Global " Then
		$globals[$globalsIndex] = ""
	Else
		$globals[$globalsIndex] = StringTrimRight($globals[$globalsIndex], 2) & @CRLF
	EndIf

	Local $FuncMain = _getFuncMain($bOnEventMode, $bGuiFunction)
	Local $FuncOnEventMode = _getFuncOnExit()
	Local $FuncDpiScaling = _getFuncDpiScaling()

	Local $gdtitle = _get_script_title()
	If $oMain.Title <> "" Then
		$gdtitle = $oMain.Title
	EndIf

	;apply the DPI scaling factor
	Local $w = $oMain.Width
	If $w <> -1 Then
		$w &= $sDpiScale
	EndIf

	Local $h = $oMain.Height
	If $oCtrls.hasMenu Then
		$h = $h + _WinAPI_GetSystemMetrics($SM_CYMENU)
	EndIf
	If $h <> -1 Then
		$h &= $sDpiScale
	EndIf

	Local $x = $oMain.Left
	If $x <> -1 Then
		$x &= $sDpiScale
	EndIf

	Local $y = $oMain.Top
	If $y <> -1 Then
		$y &= $sDpiScale
	EndIf

	Local $setOnEvent = ""
	If $bOnEventMode Then
		$setOnEvent = 'GUISetOnEvent($GUI_EVENT_CLOSE, "_onExitMain")' & @CRLF
	EndIf

	Local $background = ""
	If $oMain.Background <> "" Then
		$background = "GUISetBkColor(" & $oMain.Background & ")" & @CRLF
	Else
		$background = ""
	EndIf


	Local $code = ""
	If $bAddDpiScale Then
		$code &= "#AutoIt3Wrapper_Res_HiDpi=y" & @CRLF & @CRLF
	EndIf

	If $bOnEventMode Then
		$code &= 'Opt("GUIOnEventMode", 1)' & @CRLF & @CRLF
	EndIf

	$code &= $includes & @CRLF & @CRLF
	If $bAddDpiScale Then
		$code &= "Global $fDpiFactor = _GDIPlus_GraphicsGetDPIRatio()" & @CRLF & @CRLF
	EndIf
	$code &= $regionStart & @CRLF

	If $bGuiFunction Then
		For $line In $globals
			$code &= $line
		Next
		$code &= @CRLF

		Local $mDocData = _objDocData()
		$mDocData.name = "_guiCreate"
		$mDocData.description = "Create the main GUI"
		$code &= _functionDoc($mDocData) & @CRLF

		$code &= "Func _guiCreate()" & @CRLF
	EndIf

	Local $guiBodyCode = ""

;~ 			"Global $MainStyle = BitOR($WS_OVERLAPPED, $WS_CAPTION, $WS_SYSMENU, $WS_VISIBLE, $WS_CLIPSIBLINGS, $WS_MINIMIZEBOX)" & @CRLF
	Local $guiStyle = $oMain.styleString
;~ 	Local $item, $styleCount = 0
;~ 	For $styleKey In $oMain.styles.Keys()
;~ 		$item = $oMain.styles.Item( $styleKey )
;~ 		If $item = True Then
;~ 			If $guiStyle = "" Then
;~ 				$guiStyle = "$" & $styleKey
;~ 			Else
;~ 				$guiStyle &= ", $" & $styleKey
;~ 			EndIf
;~ 			$styleCount += 1
;~ 		EndIf
;~ 	Next
	If StringInStr($guiStyle, ",") Then
		$guiStyle = "BitOR(" & $guiStyle & ")"
	EndIf
	If $guiStyle <> "" Then
		$guiStyle = ", " & $guiStyle
	EndIf

	If $oMain.Name = "" Then
		$guiBodyCode &= 'GUICreate("' & $gdtitle & '", ' & $w & ", " & $h & ", " & $x & ", " & $y & $guiStyle & ")" & @CRLF
	Else
		$guiBodyCode &= "Global $" & $oMain.Name & ' = GUICreate("' & $gdtitle & '", ' & $w & ", " & $h & ", " & $x & ", " & $y & $guiStyle & ")" & @CRLF
	EndIf

	$guiBodyCode &= $setOnEvent & _
			$background & _
			@CRLF & $controls
	If $controlEvents <> "" Then
		$guiBodyCode &= @CRLF & $controlEvents
	EndIf

	If $bGuiFunction Then
		$guiBodyCode = StringReplace($guiBodyCode, "Global ", "")
		$guiBodyCode = @TAB & StringReplace($guiBodyCode, @CRLF, @CRLF & @TAB)
		$guiBodyCode = StringTrimRight($guiBodyCode, 1)
		$guiBodyCode &= "EndFunc   ;==>_guiCreate" & @CRLF
	EndIf

	$code &= $guiBodyCode & _
			$regionEnd & @CRLF & @CRLF & _
			$FuncMain & @CRLF & @CRLF

	If $bOnEventMode Then
		$code &= @CRLF & $FuncOnEventMode
	EndIf

	If $bAddDpiScale Then
		$code &= @CRLF & $FuncDpiScaling
	EndIf

	If $bOnEventMode Then
		For $oCtrl In $oCtrls.ctrls.Items()
			If $oCtrl.CodeString = "" Then ContinueLoop
			$code &= @CRLF & _getFuncCtrl($oCtrl)
		Next
	EndIf

	Return $code
EndFunc   ;==>_code_generation


;------------------------------------------------------------------------------
; Title...........: _functionDoc
; Description.....: generate the function doc based on template
;------------------------------------------------------------------------------
Func _functionDoc($mDocData)
	If Not IsObj($mDocData) Then Return ""

	Local $sFileData = FileRead(@ScriptDir & "\storage\templateFunctionDoc.au3")
	If @error Then Return ""

	$sFileData = StringRegExpReplace($sFileData, "\%\%name\%\%", $mDocData.name)
	$sFileData = StringRegExpReplace($sFileData, "\%\%description\%\%", $mDocData.description)

	Return $sFileData
EndFunc   ;==>_functionDoc


;------------------------------------------------------------------------------
; Title...........: _generate_controls
; Description.....: generate the code for the controls
;------------------------------------------------------------------------------
Func _generate_controls(ByRef $sControls, Const $oCtrl, $sDpiScale, $isChild = False, $bOnEventMode = False, $useCodeString = False)
	Local $aRet[2] = ["", ""]

	If $oCtrl.Type = "TabItem" Then Return $aRet
	If Not $isChild And $oCtrl.CtrlParent <> 0 Then Return $aRet

	;apply the DPI scaling factor
	Local $left = $oCtrl.Left
	If $left <> -1 Then
		$left &= $sDpiScale
	EndIf

	Local $top = $oCtrl.Top
	If $top <> -1 Then
		$top &= $sDpiScale
	EndIf

	Local $width = $oCtrl.Width
	If $width <> -1 Then
		$width &= $sDpiScale
	EndIf

	Local $height = $oCtrl.Height
	If $height <> -1 Then
		$height &= $sDpiScale
	EndIf

	Local Const $ltwh = $left & ", " & $top & ", " & $width & ", " & $height

	Local $ctrlStyle = $oCtrl.styleString
	If StringInStr($ctrlStyle, ",") Then
		$ctrlStyle = "BitOR(" & $ctrlStyle & ")"
	EndIf
	If $ctrlStyle <> "" Then
		$ctrlStyle = ", " & $ctrlStyle
	EndIf

	; The general template is GUICtrlCreateXXX( "text", left, top [, width [, height [, style [, exStyle]]] )
	; but some controls do not use this.... Avi, Icon, Menu, Menuitem, Progress, Tabitem, TreeViewitem, updown
	Local $mControls = ""
	Local $sEvents = ""

	Local $scopeString = "Local"
	If ($oCtrl.Global = $GUI_CHECKED) Or $useCodeString Then $scopeString = "Global"

	Switch $oCtrl.Type
		Case "Tab", "Group"
			If $sControls <> "" And Not (StringRight($sControls, 4) = (@CRLF & @CRLF)) Then
				$mControls &= @CRLF
			EndIf
	EndSwitch

	Switch StringStripWS($oCtrl.Name, $STR_STRIPALL) <> ''
		Case True
			$mControls &= $scopeString & " $" & $oCtrl.Name & " = "
	EndSwitch

	Switch $oCtrl.Type
		Case "Progress", "Slider", "TreeView" ; no text field
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '(' & $ltwh & $ctrlStyle & ')' & @CRLF

		Case "Icon" ; extra iconid [set to zero]
;~ 			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Text & '", 0, ' & $ltwh & $ctrlStyle & ')' & @CRLF
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("", -1, ' & $ltwh & $ctrlStyle & ')' & @CRLF
			$mControls &= "GUICtrlSetImage(-1, " & '"' & $oCtrl.Img & '")' & @CRLF

		Case "Tab"
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '(' & $ltwh & $ctrlStyle & ')' & @CRLF

			Local $oTab, $aCtrlCode
			For $hTab In $oCtrl.Tabs
				$oTab = $oCtrls.get($hTab)
				$mControls &= $scopeString & " $" & $oTab.Name & " = "
				$mControls &= 'GUICtrlCreateTabItem("' & $oTab.Text & '")' & @CRLF

				For $oTabCtrl In $oTab.ctrls.Items()
					$aCtrlCode = _generate_controls($sControls, $oTabCtrl, $sDpiScale, True, $bOnEventMode, $useCodeString)
					$mControls &= $aCtrlCode[0]
					$sEvents &= $aCtrlCode[1]
				Next
			Next
			$mControls &= 'GUICtrlCreateTabItem("")' & @CRLF & @CRLF

		Case "Updown"
			$mControls &= "GUICtrlCreateInput" & '("' & $oCtrl.Text & '", ' & $ltwh & ')' & @CRLF
			$mControls &= "GUICtrlCreateUpdown(-1" & $ctrlStyle & ")" & @CRLF

		Case "Pic"
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("", ' & $ltwh & $ctrlStyle & ')' & @CRLF
			$mControls &= "GUICtrlSetImage(-1, " & '"' & $oCtrl.Img & '")' & @CRLF

		Case "Avi"
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Img & '", 0, ' & $ltwh & $ctrlStyle & ')' & @CRLF

		Case "Menu"
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Text & '")' & @CRLF

			For $oMenuItem In $oCtrl.MenuItems
				$mControls &= $scopeString & " $" & $oMenuItem.Name & " = "
				$mControls &= 'GUICtrlCreateMenuItem("' & $oMenuItem.Text & '", $' & $oCtrl.Name & ')' & @CRLF
			Next

		Case "IP"
;~ 			_GUICtrlIpAddress_Create($hGUI, $oNewControl.Left, $oNewControl.Top, $oNewControl.Width, $oNewControl.Height)
			$mControls &= "_GUICtrlIpAddress_Create" & '($' & $oMain.Name & ', ' & $ltwh & $ctrlStyle & ')' & @CRLF
			$mControls &= "_GUICtrlIpAddress_Set($" & $oCtrl.Name & ', "' & $oCtrl.Text & '")' & @CRLF

		Case "Group"
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Text & '", ' & $ltwh & $ctrlStyle & ')' & @CRLF

			Local $aCtrlCode
			For $oGroupCtrl In $oCtrl.ctrls.Items()
				$aCtrlCode = _generate_controls($sControls, $oGroupCtrl, $sDpiScale, True, $bOnEventMode, $useCodeString)
				$mControls &= $aCtrlCode[0]
				$sEvents &= $aCtrlCode[1]
			Next

			$mControls &= 'GUICtrlCreateGroup("", -99, -99, 1, 1)' & @CRLF & @CRLF

		Case "List"
			If $oCtrl.Items <> "" Then
				$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("", ' & $ltwh & $ctrlStyle & ')' & @CRLF
				$mControls &= 'GuiCtrlSetData(-1, "' & $oCtrl.Items & '")' & @CRLF
			Else
				$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Text & '", ' & $ltwh & $ctrlStyle & ')' & @CRLF
			EndIf

		Case "Combo"
			If $oCtrl.Items <> "" Then
				$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("", ' & $ltwh & $ctrlStyle & ')' & @CRLF
				$mControls &= 'GuiCtrlSetData(-1, "' & $oCtrl.Items & '")' & @CRLF
			Else
				$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Text & '", ' & $ltwh & $ctrlStyle & ')' & @CRLF
			EndIf

		Case "Rect"
			$mControls &= 'GUICtrlCreateGraphic(' & $ltwh & $ctrlStyle & ')' & @CRLF
			Local $border, $back
			If $oCtrl.BorderColor <> "" Then
				$border = $oCtrl.BorderColor
			Else
				$border = '0x000000'
			EndIf
			If $oCtrl.background <> "" Then
				$back = ', ' & $oCtrl.background
			Else
				$back = ''
			EndIf
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_PENSIZE, ' & $oCtrl.BorderSize & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_COLOR, ' & $border & $back & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_RECT, 0, 0, ' & $oCtrl.Width & ', ' & $oCtrl.Height & ')' & @CRLF

		Case "Ellipse"
			$mControls &= 'GUICtrlCreateGraphic(' & $ltwh & $ctrlStyle & ')' & @CRLF
			Local $border, $back
			If $oCtrl.BorderColor <> "" Then
				$border = $oCtrl.BorderColor
			Else
				$border = '0x000000'
			EndIf
			If $oCtrl.background <> "" Then
				$back = ', ' & $oCtrl.background
			Else
				$back = ''
			EndIf
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_PENSIZE, ' & $oCtrl.BorderSize & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_COLOR, ' & $border & $back & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_ELLIPSE, 0, 0, ' & $oCtrl.Width & ', ' & $oCtrl.Height & ')' & @CRLF

		Case "Line"
			$mControls &= 'GUICtrlCreateGraphic(' & $ltwh & $ctrlStyle & ')' & @CRLF
			Local $border
			If $oCtrl.BorderColor <> "" Then
				$border = $oCtrl.BorderColor
			Else
				$border = '0x000000'
			EndIf
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_PENSIZE, ' & $oCtrl.BorderSize & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_COLOR, ' & $border & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_MOVE, ' & $oCtrl.Coord1[0] & ', ' & $oCtrl.Coord1[1] & ')' & @CRLF
			$mControls &= 'GUICtrlSetGraphic(-1, $GUI_GR_LINE, ' & $oCtrl.Coord2[0] & ', ' & $oCtrl.Coord2[1] & ')' & @CRLF

		Case Else
			$mControls &= "GUICtrlCreate" & $oCtrl.Type & '("' & $oCtrl.Text & '", ' & $ltwh & $ctrlStyle & ')' & @CRLF
	EndSwitch

	If $bOnEventMode Then
		If $oCtrl.CodeString <> "" Then
			$sEvents &= 'GUICtrlSetOnEvent($' & $oCtrl.Name & ', "_on' & $oCtrl.Name & '")' & @CRLF
		EndIf
	EndIf

	If ($oCtrl.FontSize <> "" And $oCtrl.FontSize <> -1 And $oCtrl.FontSize <> 8.5) Or $oCtrl.FontWeight <> 400 Or $oCtrl.FontName <> "" Then
		Local $iFs, $sFw = "", $sFn = ""
		If $oCtrl.FontName <> "" Then
			$sFn = ', "' & $oCtrl.FontName & '"'
		EndIf

		If $oCtrl.FontWeight <> 400 Then
			$sFw = ", " & $oCtrl.FontWeight
		EndIf

		If $oCtrl.FontSize = "" Or $oCtrl.FontSize = -1 Then
			$iFs = 8.5
		Else
			$iFs = $oCtrl.FontSize
		EndIf

		If $oCtrl.Type = "IP" Then
			If $sFn = "" Then
				$sFn = ', "Arial"'
			EndIf
			$mControls &= '_GUICtrlIpAddress_SetFont($' & $oCtrl.Name & $sFn & ', ' & $iFs & $sFw & ')' & @CRLF
		Else
			If $sFn <> "" Then
				$sFn = ', $GUI_FONTNORMAL' & $sFn
				If $sFw = "" Then
					$sFn = ', 400' & $sFn
				EndIf
			EndIf
			$mControls &= 'GUICtrlSetFont(-1, ' & $iFs & $sFw & $sFn & ')' & @CRLF
		EndIf
	EndIf

	If $oCtrl.Color <> "" Then
		$mControls &= "GUICtrlSetColor(-1, " & $oCtrl.Color & ")" & @CRLF
	EndIf
	If $oCtrl.Background <> "" Then
		Switch $oCtrl.Type
			Case "Rect", "Ellipse", "Line"

			Case Else
				$mControls &= "GUICtrlSetBkColor(-1, " & $oCtrl.Background & ")" & @CRLF
		EndSwitch
	EndIf

	$aRet[0] = $mControls
	$aRet[1] = $sEvents

	Return $aRet
EndFunc   ;==>_generate_controls


;------------------------------------------------------------------------------
; Title...........: _generate_includes
; Description.....: generate the code for the includes
;------------------------------------------------------------------------------
Func _generate_includes(Const $oCtrl, Const $includes)
;~ 	Switch $oCtrl.Type
;~ 		Case "Button", "Checkbox", "Group", "Radio"
;~ 			If Not StringInStr($includes, "<ButtonConstants.au3>") Then
;~ 				Return @CRLF & "#include <ButtonConstants.au3>"
;~ 			EndIf

;~ 		Case "Tab"
;~ 			If Not StringInStr($includes, "<GUITab.au3>") Then
;~ 				Return @CRLF & "#include <GUITab.au3>"
;~ 			EndIf

;~ 		Case "Date"
;~ 			If Not StringInStr($includes, "<DateTimeConstants.au3>") Then
;~ 				Return @CRLF & "#include <DateTimeConstants.au3>"
;~ 			EndIf

;~ 		Case "Edit", "Input"
;~ 			If Not StringInStr($includes, "<EditConstants.au3>") Then
;~ 				Return @CRLF & "#include <EditConstants.au3>"
;~ 			EndIf

;~ 		Case "Icon", "Label", "Pic"
;~ 			If Not StringInStr($includes, "<StaticConstants.au3>") Then
;~ 				Return @CRLF & "#include <StaticConstants.au3>"
;~ 			EndIf

;~ 		Case "List"
;~ 			If Not StringInStr($includes, "<ListBoxConstants.au3>") Then
;~ 				Return @CRLF & "#include <ListBoxConstants.au3>"
;~ 			EndIf

;~ 		Case "Progress", "Slider", "TreeView", "Combo"
;~ 			If Not StringInStr($includes, '<' & $oCtrl.Type & "Constants.au3>") Then
;~ 				Return @CRLF & "#include <" & $oCtrl.Type & "Constants.au3>"
;~ 			EndIf

;~ 		Case "IP"
;~ 			If Not StringInStr($includes, "<GuiIPAddress.au3>") Then
;~ 				Return @CRLF & "#include <GuiIPAddress.au3>"
;~ 			EndIf

;~ 		Case "ListView"
;~ 			If Not StringInStr($includes, "<ListViewConstants.au3>") Then
;~ 				Return @CRLF & "#include <ListViewConstants.au3>"
;~ 			EndIf
;~ 	EndSwitch


	If StringInStr($oCtrl.styleString, "BS_") Then
		If Not StringInStr($includes, "<ButtonConstants.au3>") Then
			Return @CRLF & "#include <ButtonConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "CBS_") Then
		If Not StringInStr($includes, "<ComboConstants.au3>") Then
			Return @CRLF & "#include <ComboConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "LBS_") Then
		If Not StringInStr($includes, "<ListBoxConstants.au3>") Then
			Return @CRLF & "#include <ListBoxConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "ES_") Then
		If Not StringInStr($includes, "<EditConstants.au3>") Then
			Return @CRLF & "#include <EditConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "PBS_") Then
		If Not StringInStr($includes, "<EditConstants.au3>") Then
			Return @CRLF & "#include <EditConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "ES_") Then
		If Not StringInStr($includes, "<ProgressConstants.au3>") Then
			Return @CRLF & "#include <ProgressConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "UDS_") Then
		If Not StringInStr($includes, "<UpDownConstants.au3>") Then
			Return @CRLF & "#include <UpDownConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "SS_") Then
		If Not StringInStr($includes, "<StaticConstants.au3>") Then
			Return @CRLF & "#include <StaticConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "TCS_") Then
		If Not StringInStr($includes, "<TabConstants.au3>") Then
			Return @CRLF & "#include <TabConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "ACS_") Then
		If Not StringInStr($includes, "<AVIConstants.au3>") Then
			Return @CRLF & "#include <AVIConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "DTS_") Or StringInStr($oCtrl.styleString, "MCS_") Then
		If Not StringInStr($includes, "<DateTimeConstants.au3>") Then
			Return @CRLF & "#include <DateTimeConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "TVS_") Then
		If Not StringInStr($includes, "<TreeViewConstants.au3>") Then
			Return @CRLF & "#include <TreeViewConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "TBS_") Then
		If Not StringInStr($includes, "<SliderConstants.au3>") Then
			Return @CRLF & "#include <SliderConstants.au3>"
		EndIf
	EndIf

	If StringInStr($oCtrl.styleString, "LVS_") Then
		If Not StringInStr($includes, "<ListViewConstants.au3>") Then
			Return @CRLF & "#include <ListViewConstants.au3>"
		EndIf
	EndIf

	If $oCtrl.Type = "IP" Then
		If Not StringInStr($includes, "<GuiIPAddress.au3>") Then
			Return @CRLF & "#include <GuiIPAddress.au3>"
		EndIf
	EndIf

	If $oCtrl.Type = "Avi" Then
		If Not StringInStr($includes, "<AVIConstants.au3>") Then
			Return @CRLF & "#include <AVIConstants.au3>"
		EndIf
	EndIf

	Return ""
EndFunc   ;==>_generate_includes

;------------------------------------------------------------------------------
; Title...........: _save_code
; Description.....: generate the au3 code and save to file
;------------------------------------------------------------------------------
Func _save_code()
	Local $code = _code_generation()
	_copy_code_to_output($code)
EndFunc   ;==>_save_code


;------------------------------------------------------------------------------
; Title...........: _copy_code_to_output
; Description.....: Save generated code to file
; Author..........: TheSaint
; Modified By.....: KurtyKurtyBoy
;------------------------------------------------------------------------------
Func _copy_code_to_output(Const $code)
	Switch StringInStr($CmdLineRaw, "/StdOut")
		Case True
			_log("#region ; --- " & $oMain.AppName & " generated code Start ---" & @CRLF & _
					StringReplace($code, @CRLF, @LF) & @CRLF & _
					"#endregion ; --- " & $oMain.AppName & " generated code End ---")

		Case False
			If $mygui = "" Then
				$mygui = "MyGUI.au3"
			EndIf

			Local Const $destination = FileSaveDialog("Save GUI to file?", "", "AutoIt (*.au3)", BitOR($FD_FILEMUSTEXIST, $FD_PATHMUSTEXIST, $FD_PROMPTOVERWRITE), $mygui)

			If @error = 1 Or Not $destination Then
				ClipPut($code)
				$bStatusNewMessage = True
				_GUICtrlStatusBar_SetText($hStatusbar, "Script copied to clipboard")
			Else
				FileDelete($destination)

				FileWrite($destination, $code)

				$bStatusNewMessage = True
				_GUICtrlStatusBar_SetText($hStatusbar, "Saved to file")
			EndIf
	EndSwitch
EndFunc   ;==>_copy_code_to_output

Func _getFuncMain($bOnEventMode, $bGuiFunction)
	;function documentation template
	Local $mDocData = _objDocData()
	$mDocData.name = "_main"
	$mDocData.description = "run the main program loop"
	Local $FuncDoc = _functionDoc($mDocData) & @CRLF

	Local $code = '' & _
			"_main()" & @CRLF & @CRLF & _
			$FuncDoc & _
			"Func _main()" & @CRLF
	If $bGuiFunction Then
		$code &= @TAB & "_guiCreate()" & @CRLF
	EndIf
	$code &= @TAB & "GUISetState(@SW_SHOWNORMAL)" & @CRLF & @CRLF & _
			@TAB & "While 1" & @CRLF
	If Not $bOnEventMode Then
		$code &= '' & _
				@TAB & @TAB & "Switch GUIGetMsg()" & @CRLF & _
				@TAB & @TAB & @TAB & "Case $GUI_EVENT_CLOSE" & @CRLF & _
				@TAB & @TAB & @TAB & @TAB & "ExitLoop" & @CRLF & @CRLF

		For $oCtrl In $oCtrls.ctrls.Items()
			If $oCtrl.CodeString <> "" Then
				$code &= '' & _
						@TAB & @TAB & @TAB & "Case $" & $oCtrl.Name & @CRLF & _
						@TAB & @TAB & @TAB & @TAB & _formatCodeString($oCtrl.CodeString) & @CRLF & @CRLF
			EndIf
		Next

		$code &= '' & _
				@TAB & @TAB & @TAB & "Case Else" & @CRLF & _
				@TAB & @TAB & @TAB & @TAB & ";" & @CRLF & _
				@TAB & @TAB & "EndSwitch" & @CRLF
	Else
		$code &= '' & _
				@TAB & @TAB & "Sleep(100)" & @CRLF
	EndIf
	$code &= '' & _
			@TAB & "WEnd" & @CRLF & _
			"EndFunc   ;==>_main"

	Return $code
EndFunc   ;==>_getFuncMain

Func _getFuncOnExit()
	;function documentation template
	Local $mDocData = _objDocData()
	$mDocData.name = "_onExitMain"
	$mDocData.description = "Clean up and exit the program"
	Local $FuncDoc = _functionDoc($mDocData) & @CRLF

	Local $code = '' & _
			$FuncDoc & _
			'Func _onExitMain()' & @CRLF & _
			@TAB & 'GUIDelete()' & @CRLF & _
			@TAB & 'Exit' & @CRLF & _
			'EndFunc   ;==>_onExitMain' & @CRLF

	Return $code
EndFunc   ;==>_getFuncOnExit

Func _getFuncDpiScaling()
	Local $code = '' & _
			';------------------------------------------------------------------------------' & @CRLF & _
			'; Name ..........: _GDIPlus_GraphicsGetDPIRatio' & @CRLF & _
			'; Description ...:' & @CRLF & _
			'; Syntax ........: _GDIPlus_GraphicsGetDPIRatio([$iDPIDef = 96])' & @CRLF & _
			'; Parameters ....: $iDPIDef             - [optional] An integer value. Default is 96.' & @CRLF & _
			'; Return values .: Scaling value for control sizes and positions' & @CRLF & _
			'; Author ........: UEZ' & @CRLF & _
			'; Modified by....: KurtyKurtyBoy' & @CRLF & _
			'; Link ..........: http://www.autoitscript.com/forum/topic/159612-dpi-resolution-problem/?hl=%2Bdpi#entry1158317' & @CRLF & _
			';------------------------------------------------------------------------------' & @CRLF & _
			'Func _GDIPlus_GraphicsGetDPIRatio($iDPIDef = 96)' & @CRLF & _
			@TAB & '_GDIPlus_Startup()' & @CRLF & _
			@TAB & 'Local $hGfx = _GDIPlus_GraphicsCreateFromHWND(0)' & @CRLF & _
			@TAB & 'If @error Then Return SetError(1, @extended, 0)' & @CRLF & _
			@TAB & 'Local $aResult' & @CRLF & _
			@TAB & '#forcedef $__g_hGDIPDll, $ghGDIPDll' & @CRLF & _
			@CRLF & _
			@TAB & '$aResult = DllCall($__g_hGDIPDll, "int", "GdipGetDpiX", "handle", $hGfx, "float*", 0)' & @CRLF & _
			@CRLF & _
			@TAB & 'If @error Then Return SetError(2, @extended, 0)' & @CRLF & _
			@TAB & 'Local $iDPI = $aResult[2]' & @CRLF & _
			@TAB & 'Local $aresults[2] = [$iDPIDef / $iDPI, $iDPI / $iDPIDef]' & @CRLF & _
			@TAB & '_GDIPlus_GraphicsDispose($hGfx)' & @CRLF & _
			@TAB & '_GDIPlus_Shutdown()' & @CRLF & _
			@CRLF & _
			@TAB & 'Return $aresults[1]' & @CRLF & _
			'EndFunc   ;==>_GDIPlus_GraphicsGetDPIRatio' & @CRLF

	Return $code
EndFunc   ;==>_getFuncDpiScaling


Func _objDocData()
	Local $oObject = _AutoItObject_Create()

	_AutoItObject_AddProperty($oObject, "name", $ELSCOPE_PUBLIC, "")
	_AutoItObject_AddProperty($oObject, "description", $ELSCOPE_PUBLIC, "")

	Return $oObject
EndFunc   ;==>_objDocData


Func _getFuncCtrl($oCtrl)
	Local $sCodeString = _formatCodeString($oCtrl.CodeString)

	If $sCodeString = "" Then Return ""

	;function documentation template
	Local $mDocData = _objDocData()
	$mDocData.name = "_on" & $oCtrl.Name
	$mDocData.description = ""
	Local $FuncDoc = _functionDoc($mDocData) & @CRLF

	Local $code = '' & _
			$FuncDoc & _
			"Func _on" & $oCtrl.Name & "()" & @CRLF

	$code &= @TAB & _formatCodeString($oCtrl.CodeString) & @CRLF
	$code &= '' & _
			"EndFunc   ;==>_on" & $oCtrl.Name & @CRLF

	Return $code
EndFunc   ;==>_getFuncCtrl

Func _formatCodeString($sCodeString)
	Local $sNewString

	$sNewString = StringReplace($sCodeString, @CRLF, @CRLF & @TAB)

	Return $sNewString
EndFunc   ;==>_formatCodeString
